def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

def keystorePropertiesFile = rootProject.file("key.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 27

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.yuklyn.iot"
        minSdkVersion 18
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }

//    buildTypes {
//        release {
//            // TODO: Add your own signing config for the release build.
//            // Signing with the debug keys for now, so `flutter run --release` works.
//            signingConfig signingConfigs.debug
//        }
//    }
}

flutter {
    source '../..'
}

dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    compile 'com.android.support:multidex:1.0.1'
//
    //登陆
    // openAccount
    compile 'com.alibaba.sdk.android.openaccount:openaccount-ui-default:3.0.4@aar'
    compile 'com.alibaba.sdk.android.openaccount:openaccount-core:3.0.4@aar'
    compile 'com.alibaba.sdk.android.openaccount:openaccount-ext:3.0.4@aar'

    //ACCS
    compile('com.taobao.android:accs_sdk_taobao:2.4.6-open')

    compile('com.aliyun.alink.linksdk:smurfssdk:0.1.1')
    //BLE SDK
    compile 'com.aliyun.alink.linksdk:smurfssdk:0.1.1'

    //Volley
    compile 'com.android.volley:volley:1.0.0'

//    // QR code
//    compile 'cn.yipianfengye.android:zxing-library:2.1'

    // open sdk
    compile('com.aliyun.alink:opensdk:0.1.3.2')

    // boneKit
    compile('com.aliyun.alink:sdk-bonekit:0.0.1.10') {
        exclude group: 'com.aliyun.alink.external', module: 'flog'
    }

//    // image support with fresco
//    compile('com.aliyun.alink.external:sdk-rn-external-fresco:0.41.2-20170630-sds') {
//        exclude group: 'com.aliyun.alink.external', module: 'react-native'
//        exclude group: 'com.aliyun.alink', module: 'sdk-rn-external'
//    }
}